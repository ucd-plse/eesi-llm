workspace(
    name = "darg_indra_errorspecifications",
)

load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")
load("@bazel_tools//tools/build_defs/repo:git.bzl", "git_repository")

# Python 3.7.4
git_repository(
    name = "bazel_python",
    commit = "a39804e7fad4aa2a75ec53008647b9463037598a",
    remote = "https://github.com/patrickjchap/bazel_python.git"
    #shallow_since = "1597891188 -0700",
)

load("@bazel_python//:bazel_python.bzl", "bazel_python")

bazel_python()

# Google utilities
http_archive(
    name = "gtest",
    build_file = "//third_party:gtest.BUILD",
    sha256 = "94c634d499558a76fa649edb13721dce6e98fb1e7018dfaeba3cd7a083945e91",
    strip_prefix = "googletest-release-1.10.0",
    url = "https://github.com/google/googletest/archive/release-1.10.0.zip",
)

http_archive(
    name = "com_github_gflags_gflags",
    sha256 = "34af2f15cf7367513b352bdcd2493ab14ce43692d2dcd9dfc499492966c64dcf",
    strip_prefix = "gflags-2.2.2",
    urls = ["https://github.com/gflags/gflags/archive/v2.2.2.tar.gz"],
)

http_archive(
    name = "com_github_google_glog",
    sha256 = "21bc744fb7f2fa701ee8db339ded7dce4f975d0d55837a97be7d46e8382dea5a",
    strip_prefix = "glog-0.5.0",
    urls = ["https://github.com/google/glog/archive/v0.5.0.zip"],
)

# Intel thread building blocks.
# If this gets updated, the hashes will no longer match.
http_archive(
    name = "com_github_01org_tbb",
    build_file = "//third_party:tbb.BUILD",
    sha256 = "e5f19d747f6adabfc7daf2cc0a1ddcfab0f26bc083d70ea0a63def4a9f3919c5",
    strip_prefix = "oneTBB-2018_U3",
    url = "https://github.com/01org/tbb/archive/2018_U3.tar.gz",
)

####### BEGIN gRPC ########
git_repository(
    name = "com_github_grpc_grpc",
    commit = "8664c8334c05d322fbbdfb9e3b24601a23e9363c",
    remote = "https://github.com/grpc/grpc.git",
    shallow_since = "1619560885 -0700",
)

load("@com_github_grpc_grpc//bazel:grpc_deps.bzl", "grpc_deps")

grpc_deps()

load("@com_github_grpc_grpc//bazel:grpc_extra_deps.bzl", "grpc_extra_deps")

grpc_extra_deps()

load("@upb//bazel:workspace_deps.bzl", "upb_deps")

upb_deps()

load("@build_bazel_rules_apple//apple:repositories.bzl", "apple_rules_dependencies")

apple_rules_dependencies()

# For `google.protobuf.Any` and others
http_archive(
    name = "com_google_protobuf",
    strip_prefix = "protobuf-c60aaf79e63b911b2c04c04e1eacb4f3c36ef790",  # this is 3.9.1 with fixes
    urls = ["https://github.com/protocolbuffers/protobuf/archive/c60aaf79e63b911b2c04c04e1eacb4f3c36ef790.zip"],
)

load("@com_google_protobuf//:protobuf_deps.bzl", "protobuf_deps")

protobuf_deps()
####### END gRPC ########

####### BEGIN LLVM ########
git_repository(
    name = "io_kythe",
    commit = "8fb62d1146a7edd80f0f6e5b8facead0f2cb75cd",
    remote = "https://github.com/kythe/kythe",
)

load("@io_kythe//:setup.bzl", "kythe_rule_repositories")

kythe_rule_repositories()

# Modified version of @io_kythe//:external.bzl because we don't need
# bring in all of the Kythe dependencies. We just want the LLVM magic.
load("@darg_indra_errorspecifications//third_party:kythe.bzl", "kythe_deps")

kythe_deps()
####### END LLVM ########

# Used by the bitcode service for hashing bitcode files.
http_archive(
    name = "openssl",
    build_file = "//third_party:openssl.BUILD",
    sha256 = "23011a5cc78e53d0dc98dfa608c51e72bcd350aa57df74c5d5574ba4ffb62e74",
    strip_prefix = "openssl-OpenSSL_1_1_1d",
    url = "https://github.com/openssl/openssl/archive/OpenSSL_1_1_1d.tar.gz",
)

git_repository(
    name = "com_google_absl",
    commit = "846e5dbedac123d12455adcfe6f53c8b5dcbfeef",
    remote = "https://github.com/abseil/abseil-cpp.git",
)

git_repository(
    name = "com_github_googleapis_google_cloud_cpp",
    commit = "51c6dfaec518be793392b9b03f4c4b2066d02e9f",
    remote = "https://github.com/googleapis/google-cloud-cpp.git",
)

load("@com_github_googleapis_google_cloud_cpp//bazel:google_cloud_cpp_deps.bzl", "google_cloud_cpp_deps")

google_cloud_cpp_deps()
